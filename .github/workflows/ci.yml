name: CI Checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies and project
        run: |
          python -m pip install --upgrade pip
          pip install ruff semgrep
          pip install -r requirements.txt
          pip install -e .  # Installs your app in "editable" mode

      - name: Run Ruff (lint)
        run: ruff check .

      - name: Run Semgrep
        run: semgrep --config=p/ci .
      
      - name: Run Pytest
        run: python -m pytest -q

  e2e-client-mock:
    name: Client E2E (Mock Core)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install workspace dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm --filter @studyapp/client exec playwright install --with-deps

      - name: Run Notes E2E against mock core
        env:
          MOCK_CORE: '1'
          CORE_PORT: '3301'
          NEXT_PUBLIC_API_BASE_URL: 'http://localhost:3301'
        run: pnpm --filter @studyapp/client exec playwright test e2e/notes-editor.spec.ts --reporter=line

      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: client-playwright-artifacts
          path: |
            apps/client/test-results
            apps/client/playwright-report

  core-e2e-pgvector:
    name: Core-Service E2E (pgvector)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_DB: studyapp_dev
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install workspace dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Core-Service E2E (with Postgres)
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/studyapp_dev?schema=public
          JWT_SECRET: ci-jwt
          INTERNAL_API_KEY: ci-internal
          NODE_ENV: test
        run: pnpm --filter core-service run test:e2e

      - name: Upload Jest Artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: core-service-jest-artifacts
          path: |
            apps/core-service/coverage
            apps/core-service/test-results