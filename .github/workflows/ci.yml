name: CI Checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies and project
        run: |
          python -m pip install --upgrade pip
          pip install ruff semgrep
          pip install -r requirements.txt
          pip install -e .  # Installs your app in "editable" mode

      - name: Run Ruff (format check)
        run: ruff format --check .

      - name: Run Ruff (lint)
        run: ruff check .

      - name: Run Semgrep
        run: semgrep --config=p/ci .
      
      - name: Run Pytest
        run: python -m pytest -q

  node-core-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Approve PNPM build scripts (Prisma, NestJS, bcrypt)
        run: pnpm approve-builds @prisma/client prisma @nestjs/core @prisma/engines bcrypt

      - name: Generate Prisma Client
        working-directory: apps/core-service
        env:
          DATABASE_URL: file:./prisma/dev.db
        run: pnpm prisma generate

      - name: Build core-service
        working-directory: apps/core-service
        run: pnpm build

      - name: Prepare database (Prisma migrate deploy)
        working-directory: apps/core-service
        env:
          DATABASE_URL: file:./prisma/dev.db
        run: |
          pnpm prisma migrate deploy

      - name: Start core-service in background
        working-directory: apps/core-service
        env:
          JWT_SECRET: test-ci-secret
          DATABASE_URL: file:./prisma/dev.db
        run: |
          nohup pnpm start > server.log 2>&1 &
          sleep 5

      - name: Run core-service e2e tests
        working-directory: apps/core-service
        env:
          JWT_SECRET: test-ci-secret
          DATABASE_URL: file:./prisma/dev.db
        run: pnpm test:e2e

  oracle-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install oracle-service dependencies
        working-directory: apps/oracle-service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run oracle-service tests
        working-directory: apps/oracle-service
        run: pytest -q