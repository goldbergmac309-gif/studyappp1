generator client {
  provider = "prisma-client-js"
  // output disabled to use Prisma's default location compatible with pnpm
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  subjects  Subject[]
}

model Subject {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Metadata (Epoch II)
  courseCode    String?
  professorName String?
  ambition      String?
  color         String?
  archivedAt    DateTime?

  // Relation to User (owner)
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Back-relation
  documents  Document[]
}

// Document processing status enum
enum Status {
  UPLOADED
  QUEUED
  PROCESSING
  COMPLETED
  FAILED
}

model Document {
  id        String   @id
  filename  String
  s3Key     String
  status    Status   @default(UPLOADED)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  subjectId String
  subject   Subject  @relation(fields: [subjectId], references: [id], onDelete: Cascade)
  analysisResult AnalysisResult?
}

model AnalysisResult {
  id            String   @id @default(cuid())
  engineVersion String
  resultPayload Json
  createdAt     DateTime @default(now())

  // Relations
  documentId String @unique
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
}
