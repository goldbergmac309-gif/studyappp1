version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: studyapp
      POSTGRES_USER: studyapp
      POSTGRES_PASSWORD: studyapp
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U studyapp"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio-mc:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "mc alias set local http://minio:9000 minioadmin minioadmin &&
      mc mb -p local/studyapp-docs || true &&
      mc anonymous set download local/studyapp-docs || true"

  core-service:
    image: ghcr.io/${GHCR_OWNER:-your-org}/core-service:latest
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      # Prisma (production uses Postgres)
      DATABASE_URL: postgres://studyapp:studyapp@postgres:5432/studyapp
      # Auth & internal
      JWT_SECRET: ${JWT_SECRET:-dev-secret}
      INTERNAL_API_KEY: ${INTERNAL_API_KEY:-dev-internal-key}
      # RabbitMQ
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      # S3 / MinIO
      AWS_REGION: us-east-1
      AWS_S3_BUCKET: studyapp-docs
      AWS_S3_ENDPOINT: http://minio:9000
      AWS_S3_FORCE_PATH_STYLE: "true"
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  oracle-service:
    image: ghcr.io/${GHCR_OWNER:-your-org}/oracle-service:latest
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
      core-service:
        condition: service_started
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672//
      RABBITMQ_QUEUE_NAME: document_processing_jobs
      CORE_SERVICE_URL: http://core-service:3000
      INTERNAL_API_KEY: ${INTERNAL_API_KEY:-dev-internal-key}
      AWS_REGION: us-east-1
      S3_BUCKET: studyapp-docs
      AWS_S3_ENDPOINT: http://minio:9000
      AWS_S3_FORCE_PATH_STYLE: "true"
      ENGINE_VERSION: oracle-v1
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8081/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  minio-data:
